#!/usr/bin/env sh

WORK_DIR="${1:-./}"
SLIDES="$(LANG=C ls -1q "$WORK_DIR"*)"
TOTAL=$(echo "$SLIDES" |wc -l)
I=0

# term control

hide_cursor() { printf '\e[?25l'; }
show_cursor() { printf '\e[?25h'; }
clear_screen() { printf '\e[2J'; }
# Move cursor to given coordinates
# $1: line
# $2: column
mov_to() { printf '\e[%sH' "${1:-"0"};${2:-"0"}"; }
top_left() { mov_to 1 1; }
# Move cursor down N lines
# $1: nb_line
mov_down() { printf '\e[%sB' "$1"; }

get_screen_geometry() {
	LINES=$(tput lines)
	COLUMNS=$(tput cols)
}

old_tty_cfg="$(stty -g)"

slide_n() { echo "$SLIDES" | sed -n "${1}"p; }

# Cat file clamped to geometry
# $1: file name
# $2: screen height (lines)
# $3: screen width (columns)
clamped_cat() { cut -c-"$3" "$1" | head -$(($2 - 1)); }

quit() {
	trap - EXIT
	stty "$old_tty_cfg"
	clear_screen
	show_cursor
	printf '\r'
	exit 0
}

show_current_slide() {
	current_slide=$(slide_n $((I + 1)))
	clear_screen
	top_left

	if [ "$I" -eq "$TOTAL" ]; then
		mov_to $((LINES / 2 - 1)) $((COLUMNS / 2 - 2))
		printf 'END.'
		return
	else
		clamped_cat "$current_slide" "$LINES" "$COLUMNS"
	fi

	# Write slide number at bottom left.
	mov_to; mov_down "$LINES"
	printf '%d/%d' "$((I+1))" "$TOTAL"
}

get_screen_geometry

trap 'quit' INT QUIT TERM EXIT
trap 'get_screen_geometry; show_current_slide' WINCH

hide_cursor

# Read one char, +icanon should be restored on exit
stty -icanon
read_char() { dd ibs=1 count=1 2>/dev/null; }

while true; do
	# clamp I
	[ "$I" -lt 0 ] && I=0
	[ "$I" -gt "$TOTAL" ] && I=$TOTAL

	show_current_slide

	# Navigation
	case "$(read_char)" in
	"j"|"n")
		[ "$I" -eq "$TOTAL" ] && quit
		I=$((I + 1))
		;;
	"k"|"p"|"N")
		I=$((I - 1))
		;;
	"g"|"0")
		I=0
		;;
	"G")
		I=$((TOTAL - 1))
		;;
	"q")
		quit
		;;
	*)
		;;
	esac
done
